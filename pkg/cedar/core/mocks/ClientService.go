// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	runtime "github.com/go-openapi/runtime"
	mock "github.com/stretchr/testify/mock"

	system "github.com/cmsgov/easi-app/pkg/cedar/core/gen/client/system"
)

// ClientService is an autogenerated mock type for the ClientService type
type ClientService struct {
	mock.Mock
}

// SetTransport provides a mock function with given fields: transport
func (_m *ClientService) SetTransport(transport runtime.ClientTransport) {
	_m.Called(transport)
}

// SystemDetailAdd provides a mock function with given fields: params, authInfo, opts
func (_m *ClientService) SystemDetailAdd(params *system.SystemDetailAddParams, authInfo runtime.ClientAuthInfoWriter, opts ...system.ClientOption) (*system.SystemDetailAddOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *system.SystemDetailAddOK
	if rf, ok := ret.Get(0).(func(*system.SystemDetailAddParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) *system.SystemDetailAddOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*system.SystemDetailAddOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*system.SystemDetailAddParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SystemDetailFindByID provides a mock function with given fields: params, authInfo, opts
func (_m *ClientService) SystemDetailFindByID(params *system.SystemDetailFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...system.ClientOption) (*system.SystemDetailFindByIDOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *system.SystemDetailFindByIDOK
	if rf, ok := ret.Get(0).(func(*system.SystemDetailFindByIDParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) *system.SystemDetailFindByIDOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*system.SystemDetailFindByIDOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*system.SystemDetailFindByIDParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SystemDetailUpdate provides a mock function with given fields: params, authInfo, opts
func (_m *ClientService) SystemDetailUpdate(params *system.SystemDetailUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...system.ClientOption) (*system.SystemDetailUpdateOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *system.SystemDetailUpdateOK
	if rf, ok := ret.Get(0).(func(*system.SystemDetailUpdateParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) *system.SystemDetailUpdateOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*system.SystemDetailUpdateOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*system.SystemDetailUpdateParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SystemSummaryFindByID provides a mock function with given fields: params, authInfo, opts
func (_m *ClientService) SystemSummaryFindByID(params *system.SystemSummaryFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...system.ClientOption) (*system.SystemSummaryFindByIDOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *system.SystemSummaryFindByIDOK
	if rf, ok := ret.Get(0).(func(*system.SystemSummaryFindByIDParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) *system.SystemSummaryFindByIDOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*system.SystemSummaryFindByIDOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*system.SystemSummaryFindByIDParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SystemSummaryFindList provides a mock function with given fields: params, authInfo, opts
func (_m *ClientService) SystemSummaryFindList(params *system.SystemSummaryFindListParams, authInfo runtime.ClientAuthInfoWriter, opts ...system.ClientOption) (*system.SystemSummaryFindListOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *system.SystemSummaryFindListOK
	if rf, ok := ret.Get(0).(func(*system.SystemSummaryFindListParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) *system.SystemSummaryFindListOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*system.SystemSummaryFindListOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*system.SystemSummaryFindListParams, runtime.ClientAuthInfoWriter, ...system.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
